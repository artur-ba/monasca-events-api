[DEFAULT]
# logging, make sure that the user under whom the server runs has permission
# to write to the directory.
log_file = events_api.log
log_dir = /var/log/monasca/events_api
log_level = DEBUG

# Identifies the region that the Monasca API is running in.
region = useast

# Dispatchers to be loaded to serve restful APIs
dispatcher = v2_ref_stream_definitions
dispatcher = v2_ref_events
dispatcher = v2_ref_transforms

[security]
# The roles that are allowed full access to the API.
default_authorized_roles = user, domainuser, domainadmin, monasca-user

# The roles that are allowed to only POST metrics to the API. This role would be used by the Monasca Agent.
agent_authorized_roles = monasca-agent

# The roles that are allowed to access the API on behalf of another tenant.
# For example, a service can POST metrics to another tenant if they are a member of the "delegate" role.
delegate_authorized_roles = admin

[messaging]
# The message queue driver to use
driver = kafka

# The type of events message format to publish to the message queue.
events_message_format = reference

[repositories]
# The driver to use for the stream definitions repository
streams_driver = mysql_streams_repo

# The driver to use for the events repository
events_driver = mysql_events_repo 

# The driver to use for the transforms repository
transforms_driver = mysql_transforms_repo

[dispatcher]
driver = v2_reference

[kafka]
# The endpoint to the kafka server
uri = 192.168.10.4:9092

# The topic that events will be published too
events_topic = transformed-events

# consumer group name
group = api

# how many times to try when error occurs
max_retry = 1

# wait time between tries when kafka goes down
wait_time = 1

# use synchronous or asynchronous connection to kafka
async = False

# send messages in bulk or send messages one by one.
compact = False

# How many partitions this connection should listen messages on, this
# parameter is for reading from kafka. If listens on multiple partitions,
# For example, if the client should listen on partitions 1 and 3, then the
# configuration should look like the following:
#   partitions = 1
#   partitions = 3
# default to listen on partition 0.
partitions = 0

[mysql]
database_name = mon
hostname = 192.168.10.4
username = monapi
password = password

[keystone_authtoken]
identity_uri = http://192.168.10.5:35357
auth_uri = http://192.168.10.5:5000
admin_password = admin
admin_user = admin
admin_tenant_name = admin
cafile =
certfile =
keyfile =
insecure = false
